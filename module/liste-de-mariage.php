<?php// Fichier lu// "00-index.xml"// éventuellement "article.xml"//class ModuleListeDeMariage extends ModuleSquelette{		private $_id = '';	// id du nom du cadeaux		public function __construct($url, $query, $urlArray, $conf){		parent::__construct($url, $query, $urlArray, $conf);				require(ROOT_PATH.$this->_config['librairie']['interstitium'].'liste-de-mariage.class.php');						self::$myPage = new Xml_ListeDeMariage($urlArray);				if(self::$myPage -> error){			// redirection si le fichier n'existe pas						FrontController::errorMessage('ARTICLE_000 | Problème = article inexistant ('.$this -> _idPage.').');			FrontController::redirect($_SESSION['langue'].',erreur,400.html');	// sinon, erreur!		} 	}		public function setBreadCrumbs($lastCrumbs=''){		//parent::setBreadCrumbs();		$activePage = self::$myMenu -> getMenuItem($this -> _idPage);		if(isset($activePage['nom'])){			if($lastCrumbs == ''){				self::$arrayToParse['CURRENT_CRUMB'] = $activePage['nom'];			}else{				self::$arrayToParse['CURRENT_CRUMB'] = $lastCrumbs;				self::$multiArrayToParse[]= array('crumbs' => array('LINK' 	=> $this->_idPage.$this->_config['ext']['web'],																	'NAME' 	=> $activePage['nom'],																	'TITLE' 	=> $activePage['nom'],																	'IS_LINK' 	=> true																));			}		}	}		public function setData(){		self::$expireHtml = 0;	// pas de cache navigateur		self::$cacheTime = 0;	// pas de cache HTML		// TEMPLATE		$this -> _templateNameModule 	= 'index';				$baseFile = rtrim(dirname($_SERVER['SCRIPT_NAME'])).'/';			$urlPath  =  parse_url($_SERVER['REQUEST_URI'],PHP_URL_PATH);			$urlPath = substr($urlPath , strlen($baseFile));				$listeCadeaux = self::$myPage -> getCadeaux();				self::$arrayToParse['LINK_PANIER'] = $this->urlAddQuery(array('show'=>'panier'),true);				$this -> formTarget($this->urlAddQuery(array('show'=>'commande'),true) ,'FICHIER_CIBLE');				self::$arrayToParse['REMPLIR_CHAMP'] = FALSE;		if(isset($_POST['nom']) && !empty($_POST['nom'])			&& isset($_POST['email']) && !empty($_POST['email'])			&& mb_eregi("^[^@ ]+@[^@ ]+\.[^@ \.]+$", $_POST['email'])			&& isset($_SESSION['panier'])){			$message = '';			$message .= 	'<h3>Bonjour '.$_POST['nom'].' !</h3>';			$message .= '<p>Vous venez de sélectionner les cadeaux suivant pour le mariage de Dorcas et Timothée :</p>';			$message .= '<hr/>';			$panier = $_SESSION['panier'];			foreach($panier as $key=>$value){												$nb_offrir = 0;				$nb_acheter = 0;				$euros = 0;								if(isset($listeCadeaux[$key])){										$paye = 0;					if(intval($listeCadeaux[$key]['nb']) > 0){						$nb = intval($listeCadeaux[$key]['nb']) - 1;						if(isset($value['paye'])){							$paye = $value['paye'];							if($listeCadeaux[$key]['acheter'] == 2 && ($listeCadeaux[$key]['prix'] - $listeCadeaux[$key]['paye'] - $paye) > 0){								$nb = intval($listeCadeaux[$key]['nb']);							}						}						$arrayAttr = array('nb' 	=> $nb,										   'paye'	=> $paye,										   'type' => $value['type']										);						$acheteur = array('nom' 	=>$_POST['nom'],										'email' => $_POST['email']										);						self::$myPage -> upDateCadeau($key, $arrayAttr, $acheteur);												$prix = $listeCadeaux[$key]['prix'];						$offrir = FALSE;						$acheter = FALSE;						$text = '';						if($value['type'] == 'offrir'){							$offrir = TRUE;							$nb_offrir++;							$text = ' > J\'achète le cadeau et l\'apporte lors du mariage.';						}elseif($value['type'] == 'acheter'){							$acheter = TRUE;							$nb_acheter++;							$text = ' > J\'offre '.$prix.' euros pour ce cadeau et apporte le montant lors du mariage.';							$euros = $euros + $listeCadeaux[$key]['prix'];						}elseif($value['type'] == 'acheter2'){							$acheter = TRUE;							$text = ' > J\'offre '.$prix.' euros pour ce cadeau et apporte le montant lors du mariage.';							$nb_acheter++;							$euros = $euros + $panier[$key]['paye'];							$prix = $panier[$key]['paye'];						}						$message .= '<p><strong>'.$listeCadeaux[$key]['titre'].'</strong><br/>';						$message .=  $text.'<br/>';						$message .= '<strong>Description :</strong> '.$listeCadeaux[$key]['description'].'</p>';						$message .= '<hr/>';											}				}			}						$message .= '<p>Pour toutes remarques / questions veuillez contacter Emanuel Huber (emanuel.huber@gmail.com).</p>';			$message .= '<p>Votre présence au mariage de Dorcas et Timothée est le plus beau des cadeaux.</p>';			$message .= '<p>Amicalement.</p>';			$message .= '<p>Emanuel Huber</p>';			$message .= '<p>PS. Ce mail a été délivré automatiquement.</p>';						$this -> sendMail($_POST['nom'],$_POST['email'], $listeCadeaux, '<html>'. $message.'</html>' );			$messageheader = '<h2> Voici un aperçu de votre selection !</h2>';			$messageheader.= '<p>Vous devrez aussi recevoir par mail ce qui suit mais il se peut que le mail soit considéré comme étant du spam.</p>';			$messageheader.= '<p>Il vous est recommandé de sauvegarder cette page (soit sauvegarder soit imprimer).</p>';						$_SESSION['message_pdf'] = $messageheader.'<div id="cadeau">'.$message.'</div>';						self::$arrayToParse['MESSAGE'] = $messageheader.'<div id="cadeau">'.$message.'</div>';						$this -> _templateNameModule 	= 'confirmation';			unset($_SESSION['panier']); 			}elseif(isset($_SESSION['panier']) && isset($_POST['nom'])){			self::$arrayToParse['REMPLIR_CHAMP'] = TRUE;		}else{			$this -> _templateNameModule 	= 'index';		}				if(isset($this->_urlQuery['supprimer']) && !empty($this->_urlQuery['supprimer'])){			if(array_key_exists($this->_urlQuery['supprimer'], $listeCadeaux)){				unset($_SESSION['panier'][$this->_urlQuery['supprimer']]);			}		}				if(isset($this->_urlQuery['cadeau']) && !empty($this->_urlQuery['cadeau'])){			if(array_key_exists($this->_urlQuery['cadeau'], $listeCadeaux)){				$leCadeau = $listeCadeaux[$this->_urlQuery['cadeau']];				// TEMPLATE				$this -> _templateNameModule 	= 'cadeau';				$this -> showLeCadeau($leCadeau);				$this -> setBreadCrumbs($leCadeau['titre']);				$this -> showPanier($listeCadeaux);			}else{				$this -> showCadeaux($listeCadeaux);				$this -> showPanier($listeCadeaux);				$this -> setBreadCrumbs();			}		}elseif(isset($this->_urlQuery['type']) && !empty($this->_urlQuery['type']) 				&& in_array($this->_urlQuery['type'],array('acheter','acheter2','offrir'))				&& isset($this->_urlQuery['id']) && !empty($this->_urlQuery['id'])){					if(!isset($_SESSION['panier'])){						$_SESSION['panier']=array('');					}					$prix = 0;					if(isset($this->_urlQuery['prix']) && !empty($this->_urlQuery['prix']) 						&&  intval($this->_urlQuery['prix']) > 0){						$prix = intval($this->_urlQuery['prix']);										}					$_SESSION['panier'][$this->_urlQuery['id']] = array('id' => $this->_urlQuery['id'],												  'type' => $this->_urlQuery['type'],												  'paye' => $prix);																		FrontController::redirect($urlPath);						}elseif(isset($this->_urlQuery['show']) && ($this->_urlQuery['show'] == 'panier') && isset($_SESSION['panier'])){			// TEMPLATE			$this -> _templateNameModule 	= 'panier';			$this -> showPanier($listeCadeaux);			$this -> setBreadCrumbs('Panier');		}elseif(isset($this->_urlQuery['commande']) && ($this->_urlQuery['commande'] == 'panier')		&& isset($_SESSION['panier']) ){			// TEMPLATE			$this -> _templateNameModule 	= 'commande';			$this -> showPanier($listeCadeaux);			$this -> setBreadCrumbs('Panier');		}elseif(isset($this->_urlQuery['show']) && ($this->_urlQuery['show'] == 'commande') && !isset($_SESSION['panier'])){			$this -> _templateNameModule 	= 'confirmation';			//$_SESSION['message_pdf'] = $messageheader.'<div id="cadeau">'.$message.'</div>';						self::$arrayToParse['MESSAGE'] =$_SESSION['message_pdf'] ;							}else{			$this -> showCadeaux($listeCadeaux);			$this -> showPanier($listeCadeaux);			$this -> setBreadCrumbs();			if(isset($_SESSION['message_pdf'])) unset($_SESSION['message_pdf']); 		}		self::$arrayToParse['LINK_PRINT_PDF'] = $this->urlAddQuery(array('print'=>'pdf'),false);		self::$arrayToParse['LINK_PRINT'] = $this->urlAddQuery(array('print'=>'print'),false);				self::$arrayToParse['LINK_LISTE'] = $urlPath;	}		public function sendMail($nom, $email, $listeCadeaux, $message){		if(isset($_SESSION['panier']) && !empty($_SESSION['panier'])){			$headers  ='From: "Webmaster "<emanuel.huber@gmail.com>'."\n";			$headers .='Reply-To: emanuel.huber@gmail.com'."\n";			$headers .='CC: emanuel.huber@gmail.com'."\n";			$headers .='Content-Type: text/html; charset=utf-8"'."\n";			$headers .='Content-Transfer-Encoding: 8bit';						$objet =  'Liste de mariage Dorcas et Timothee';					if(mail($email, $objet, $message, $headers)){				//self::$arrayToParse['MESSAGE'] =$message . $headers;					return true;			}			return false;		}	}		public function showPanier($listeCadeaux){		if(isset($_SESSION['panier']) && !empty($_SESSION['panier']) && is_array($_SESSION['panier'])){			$panier = $_SESSION['panier'];			$nb_offrir = 0;			$nb_acheter = 0;			$euros = 0;			//unset($_SESSION['panier']);			foreach($panier as $key=>$value){				if(array_key_exists($key, $listeCadeaux)){					$prix = $listeCadeaux[$key]['prix'];					$offrir = FALSE;					$acheter = FALSE;					if($value['type'] == 'offrir'){						$offrir = TRUE;						$nb_offrir++;					}elseif($value['type'] == 'acheter'){						$acheter = TRUE;						$nb_acheter++;						$euros = $euros + $listeCadeaux[$key]['prix'];					}elseif($value['type'] == 'acheter2'){						$acheter = TRUE;						$nb_acheter++;						$euros = $euros + $panier[$key]['paye'];						$prix = $panier[$key]['paye'];					}					self::$multiArrayToParse[]= array('panier' => array('TITRE' 	=> $listeCadeaux[$key]['titre'],																		'IS_OFFRIR_PANIER' => $offrir,																		'IS_ACHETER_PANIER' => $acheter,																		'IS_ACHETER_PANIER1' => ($value['type'] == 'acheter'),																		'IS_ACHETER_PANIER2' => ($value['type'] == 'acheter2'),																		'LINK' => $this->urlAddQuery(array('cadeau' =>  $listeCadeaux[$key]['id']),true),																		'PRIX' => $prix,																		'LINK_DELETE' => $this->urlAddQuery(array('supprimer' => $listeCadeaux[$key]['id'])),   																	   'DESCRIPTION' 	=> $listeCadeaux[$key]['description']																)); 				}else{					unset($_SESSION['panier'][$key]);				}			}			self::$arrayToParse['TOTAL_OFFRIR_PANIER'] = $nb_offrir;			self::$arrayToParse['IS_TOTAL_OFFRIR_PANIER'] = ($nb_offrir > 0);			self::$arrayToParse['TOTAL_ACHETER_PANIER'] = $nb_acheter;			self::$arrayToParse['IS_TOTAL_ACHETER_PANIER'] = ($nb_acheter>0);			self::$arrayToParse['TOTAL_EUROS_PANIER'] = $euros;			self::$arrayToParse['IS_FULL_PANIER'] = TRUE;			self::$arrayToParse['LINK_COMANDER_PANIER'] = $this->urlAddQuery(array('commande'=>'panier'),true);		}else{			self::$arrayToParse['IS_FULL_PANIER'] = FALSE;		}	}		public function showLeCadeau($leCadeau){		$link_acheter = 'acheter';		$acheter2= false;		self::$arrayToParse['ACHETER_PRIX_CADEAU'] = 0;		$start_prix = 0;		$prix = $leCadeau['prix'] - $leCadeau['paye'];		if($leCadeau['acheter']==2){			$link_acheter = 'acheter2';			$acheter2= true;			self::$arrayToParse['ACHETER_PRIX_CADEAU'] =$prix;		}		if(isset($_SESSION['panier'][$leCadeau['id']]['prix'])){			$start_prix =$_SESSION['panier'][$leCadeau['id']]['prix'];		}		self::$arrayToParse['START_PRIX_CADEAU'] = $start_prix;		self::$arrayToParse['PRIX_CADEAU'] = $prix;		self::$arrayToParse['PRIX_ORIGINAL'] = $leCadeau['prix'];		self::$arrayToParse['PRIX_PAYE'] = $leCadeau['prix']-$prix;		self::$arrayToParse['LINK_CADEAU'] = $leCadeau['titre'];		self::$arrayToParse['TITRE_CADEAU'] = $leCadeau['titre'];		self::$arrayToParse['DESCRIPTION_CADEAU'] = $leCadeau['description'];		self::$arrayToParse['ID_CADEAU'] = $leCadeau['id'];		self::$arrayToParse['IS_OFFRIR_CADEAU'] = $leCadeau['offrir'];		self::$arrayToParse['OFFRIR_LINK_CADEAU'] = $this->urlAddQuery(array('type'=> "offrir", 'id' => $leCadeau['id']),true);		self::$arrayToParse['IS_ACHETER_CADEAU'] = $leCadeau['acheter'];		self::$arrayToParse['IS_ACHETER2_CADEAU'] = $acheter2;		self::$arrayToParse['ACHETER_CADEAU_LINK'] = $this->urlAddQuery(array('type'=> $link_acheter, 'id' => $leCadeau['id']),true);			}			public function showCadeaux($listeCadeaux){		$nbItemPerPage = self::$myPage -> getOption();		$nbItem	= count($listeCadeaux);				if(isset($this -> _urlQuery['nb'])){			$nb = intval($this -> _urlQuery['nb']);			$nb = floor(abs($nb));			$start = ($nb-1)*$nbItemPerPage;	//  < $i			$end = $nb*$nbItemPerPage;	// => $i		}elseif($this -> _id == ''){	// pas d'article sélectionné			$start = 0;			$end = $nbItemPerPage;		}				//$this -> showCadeaux($listeCadeaux,$start,$end);		$i=1;				foreach($listeCadeaux as $key=>$value){			$cadeau = $listeCadeaux[$key];			$morethanone = false;			$selected = false;			$nb = $cadeau['nb'];			$paye = $cadeau['paye'];			if(isset($_SESSION['panier'][$key])){				$selected = true;				$nb = $nb - 1;				if($_SESSION['panier'][$key]['type'] == 2){					$paye = $paye + $_SESSION['panier'][$key]['paye'];				}			}			//$this-> echo_r($cadeau);		//	$maDate = $this->afficherDate($cadeau['date'],$_SESSION['langue'],$nomJour=1,$moisAbrev=1);				if($start < $i && $i <= $end){					/* echo $cadeau['titre']; */					self::$multiArrayToParse[]= array('cadeau' => array('TITRE' 	=> $cadeau['titre'],																	/*  'DATE' 	=> $cadeau['date'], */																	  'ID' 	=> $cadeau['id'], 																	  'LINK' 	=> $this->urlAddQuery(array('cadeau'=> $cadeau['id']),true), 																	 'IS_OFFRIR' => $cadeau['offrir'],																	 'IS_ACHETER' => $cadeau['acheter'],																	 'IS_ACHETER1' => ($cadeau['acheter']==1),																	 'IS_ACHETER2' => ($cadeau['acheter']==2),																	 'IS_DISPONIBLE' => $cadeau['nb'],																	 'IS_MORETHANONE' => ($cadeau['nb']>1),																	 'IS_SELECTED' => $selected,																	 'NOMBRE' => $nb,																	 'PRIX' => $cadeau['prix'],																	 																	 'PRIX_REST' => $cadeau['prix'] -  $cadeau['paye'],																	 																	// 'PAYE' => $cadeau['paye'],																	 																	 'PAYE' => $paye,																	 																	 'DESCRIPTION' 	=> $cadeau['description']																	/*  'MOTSCLEFS' 	=> $cadeau['tags'],																	 'LIEN'		=> $this -> _idPage.','.$cadeau['id'].$this->_config['ext']['web'],																	 'NOM_JOUR'  	=> 	$maDate[0],																	 'JOUR'			=>  $maDate[1],																	 'MOIS'			=> 	$maDate[2],																	 'ANNEE' 		=> 	$maDate[4] */																));				}				$i++;		}	}}?>