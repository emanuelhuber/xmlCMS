<?php// Fichier lu// "00-index.xml"// éventuellement "article.xml"//class ModulePagemulti extends ModuleSquelette{		private $_id = '';	// id du nom de l'article (p.ex. "science-religion-opposition")	private $_collection = '';		public function __construct($url, $query, $urlArray, $conf){		parent::__construct($url, $query, $urlArray, $conf);				require(ROOT_PATH.$this->_config['librairie']['interstitium'].'pagemulti.class.php');				self::$myPage = new Xml_Pagemulti($urlArray);		if(self::$myPage -> error){			// 'PAGE_000' 'Problème = le fichier de données '.$path.' n\'existe pas !!'			FrontController::errorMessage('PAGE_000 | roblème = le fichier de données '.$path.' n\'existe pas !!');			FrontController::redirect($_SESSION['langue'].',erreur,404.html');		// sinon, erreur! 		}	}		public function setBreadCrumbs(){		//parent::setBreadCrumbs();		$activePage = self::$myMenu -> getMenuItem($this -> _idPage);		if(isset($activePage['nom'])){			self::$arrayToParse['CURRENT_CRUMB'] = $activePage['nom'];		}		//self::$arrayToParse['CURRENT_CRUMB'] = $this -> _activNode -> getAttribute('nom');			}		public function setData(){		$this -> setBreadCrumbs();		$blocs = self::$myPage -> getBlocs();				/* 	 */			$this -> _templateNameModule 	= 'page';				$i = 1;		foreach($blocs as $bloc){			if($bloc['publish']==1){				self::$multiArrayToParse[]= array('blocs' => array('TITRE' 	=> $bloc['titre'],																	 'ID' 	=> $i,																	 'CONTENU' 	=>  $this->setPlugin($bloc['contenu'])																		));				$i++;			}		}				self::$arrayToParse['LINK_PRINT_PDF'] = $this->urlAddQuery(array('print'=>'pdf'),false);		self::$arrayToParse['LINK_PRINT'] = $this->urlAddQuery(array('print'=>'print'),false);	}			}?>